'use client'

// frontend/src/components/providers.tsx
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { ReactQueryDevtools } from '@tanstack/react-query-devtools'
import { ThemeProvider } from 'next-themes'
import { useState, useEffect } from 'react'
import { useAuthStore } from '@/stores/auth-store'
import { useSocket } from '@/lib/socket-client'

// –°–æ–∑–¥–∞–µ–º QueryClient —Å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
function makeQueryClient() {
    return new QueryClient({
        defaultOptions: {
            queries: {
                // –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫—ç—à–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö (5 –º–∏–Ω—É—Ç)
                staleTime: 5 * 60 * 1000,
                // –í—Ä–µ–º—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (10 –º–∏–Ω—É—Ç)
                cacheTime: 10 * 60 * 1000,
                // –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
                retry: (failureCount, error: any) => {
                    // –ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º –¥–ª—è 404 –∏ 401
                    if (error?.response?.status === 404 || error?.response?.status === 401) {
                        return false
                    }
                    return failureCount < 3
                },
                retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),
                // –†–µ—Ñ–µ—Ç—á –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –æ–∫–Ω–∞
                refetchOnWindowFocus: false,
                // –†–µ—Ñ–µ—Ç—á –ø—Ä–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
                refetchOnReconnect: true,
            },
            mutations: {
                // –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –¥–ª—è –º—É—Ç–∞—Ü–∏–π
                retry: 1,
                retryDelay: 1000,
            },
        },
    })
}

let browserQueryClient: QueryClient | undefined = undefined

function getQueryClient() {
    if (typeof window === 'undefined') {
        // –°–µ—Ä–≤–µ—Ä: –≤—Å–µ–≥–¥–∞ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç
        return makeQueryClient()
    } else {
        // –ë—Ä–∞—É–∑–µ—Ä: –∏—Å–ø–æ–ª—å–∑—É–µ–º singleton
        if (!browserQueryClient) browserQueryClient = makeQueryClient()
        return browserQueryClient
    }
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function AuthChecker() {
    const checkAuth = useAuthStore(state => state.checkAuth)
    const isAuthenticated = useAuthStore(state => state.isAuthenticated)
    const token = useAuthStore(state => state.token)
    const { connect, disconnect } = useSocket()

    useEffect(() => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        checkAuth()
    }, [checkAuth])

    useEffect(() => {
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Socket.IO –µ—Å–ª–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã
        if (isAuthenticated && token) {
            connect()
        } else {
            disconnect()
        }
    }, [isAuthenticated, token, connect, disconnect])

    return null
}

// –ü—Ä–æ–≤–∞–π–¥–µ—Ä —Ç–µ–º—ã
function CustomThemeProvider({ children }: { children: React.ReactNode }) {
    return (
        <ThemeProvider
            attribute="class"
            defaultTheme="dark"
            enableSystem
            disableTransitionOnChange
        >
            {children}
        </ThemeProvider>
    )
}

// –ì–ª–∞–≤–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä
export function Providers({ children }: { children: React.ReactNode }) {
    const [queryClient] = useState(() => getQueryClient())

    return (
        <QueryClientProvider client={queryClient}>
            <CustomThemeProvider>
                <AuthChecker />
                {children}
            </CustomThemeProvider>

            {/* React Query DevTools —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ */}
            {process.env.NODE_ENV === 'development' && (
                <ReactQueryDevtools
                    initialIsOpen={false}
                    position="bottom-right"
                />
            )}
        </QueryClientProvider>
    )
}

// –•—É–∫ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
export function useGlobalLoading() {
    const authLoading = useAuthStore(state => state.isLoading)

    return {
        isLoading: authLoading,
    }
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ª–æ–∞–¥–µ—Ä–∞ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export function AppLoader() {
    return (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-background/80 backdrop-blur-sm">
            <div className="flex flex-col items-center space-y-4">
                <div className="h-12 w-12 animate-spin rounded-full border-4 border-primary border-t-transparent"></div>
                <p className="text-sm text-muted-foreground">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
            </div>
        </div>
    )
}

// HOC –¥–ª—è –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
export function withAuth<P extends object>(Component: React.ComponentType<P>) {
    return function AuthenticatedComponent(props: P) {
        const isAuthenticated = useAuthStore(state => state.isAuthenticated)
        const isLoading = useAuthStore(state => state.isLoading)

        if (isLoading) {
            return <AppLoader />
        }

        if (!isAuthenticated) {
            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
            if (typeof window !== 'undefined') {
                window.location.href = '/auth/login'
            }
            return <AppLoader />
        }

        return <Component {...props} />
    }
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
export function ConnectionStatus() {
    const connectionStatus = useSocket().connectionStatus

    if (connectionStatus === 'connected') {
        return null
    }

    const statusConfig = {
        disconnected: {
            text: '–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω',
            color: 'bg-gray-500',
            icon: '‚ö´'
        },
        connecting: {
            text: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...',
            color: 'bg-yellow-500',
            icon: 'üü°'
        },
        error: {
            text: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
            color: 'bg-red-500',
            icon: 'üî¥'
        }
    }

    const config = statusConfig[connectionStatus] || statusConfig.disconnected

    return (
        <div className="fixed top-4 right-4 z-40 flex items-center space-x-2 rounded-md bg-card px-3 py-2 text-sm shadow-lg border">
            <span className={`h-2 w-2 rounded-full ${config.color}`}></span>
            <span className="text-card-foreground">{config.text}</span>
        </div>
    )
}

// Wrapper –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –∏–≥—Ä—ã
export function GamePageWrapper({ children }: { children: React.ReactNode }) {
    return (
        <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900">
            <ConnectionStatus />
            {children}
        </div>
    )
}