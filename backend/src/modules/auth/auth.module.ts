// backend/src/modules/auth/auth.module.ts
import { authRouter } from './auth.router'
import { AuthService } from './auth.service'
import { AuthController } from './auth.controller'
import { authMiddleware } from './auth.middleware'

/**
 * Auth Module - —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
export class AuthModule {
    public static router = authRouter
    public static service = new AuthService()
    public static controller = new AuthController()
    public static middleware = authMiddleware

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    public static async initialize(): Promise<void> {
        try {
            console.log('üîê Auth module initialized successfully')
        } catch (error) {
            console.error('‚ùå Failed to initialize Auth module:', error)
            throw error
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞
     */
    public static getService(): AuthService {
        return this.service
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ middleware –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
     */
    public static getMiddleware() {
        return this.middleware
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç—ã –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
export { AuthService } from './auth.service'
export { AuthController } from './auth.controller'
export { authMiddleware } from './auth.middleware'
export { authRouter } from './auth.router'
export * from './auth.types'