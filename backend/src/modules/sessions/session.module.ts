// backend/src/modules/sessions/session.module.ts
import { sessionRouter } from './session.router'
import { SessionService } from './session.service'
import { SessionController } from './session.controller'

/**
 * Session Module - —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–≥—Ä–æ–≤—ã—Ö —Å–µ—Å—Å–∏–π
 */
export class SessionModule {
    public static router = sessionRouter
    public static service = new SessionService()
    public static controller = new SessionController()

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    public static async initialize(): Promise<void> {
        try {
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫—ç—à–∞, –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∏ —Ç.–¥.
            console.log('üé≤ Session module initialized successfully')
        } catch (error) {
            console.error('‚ùå Failed to initialize Session module:', error)
            throw error
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞
     */
    public static getService(): SessionService {
        return this.service
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π (–º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é)
     */
    public static async cleanupInactiveSessions(): Promise<void> {
        try {
            // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—á–∏—Å—Ç–∫—É –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π
            console.log('üßπ Cleaning up inactive sessions...')
        } catch (error) {
            console.error('‚ùå Failed to cleanup inactive sessions:', error)
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç—ã –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
export { SessionService } from './session.service'
export { SessionController } from './session.controller'
export { sessionRouter } from './session.router'
export * from './session.types'